.\" Copyright (c) 1993, 1994  X Consortium
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining
.\" a copy of this software and associated documentation files (the
.\" "Software"), to deal in the Software without restriction, including
.\" without limitation the rights to use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or sell copies of the Software, and to
.\" permit persons to whom the Software furnished to do so, subject to
.\" the following conditions:
.\"
.\" The above copyright notice and this permission notice shall be included
.\" in all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained in this notice, the name of the X Consortium shall
.\" not be used in advertising or otherwise to promote the sale, use or
.\" other dealing in this Software without prior written authorization
.\" from the X Consortium.
.\"
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtNext-Event XtPeek-Event XtProcess-Event XtMain-Loop wid-get
.na
.TH XtNextEvent __libmansuffix__ __xorgversion__ "XT COMPATIBILITY FUNCTIONS"
.SH NAME
XtNextEvent, XtPending, XtPeekEvent, XtProcessEvent, XtMainLoop \- query and process events and input
.SH SYNTAX
#include <X11/Intrinsic.h>
.HP
void XtNextEvent(XEvent *\fIevent_return\fP);
.HP
Boolean XtPeekEvent(XEvent *\fIevent_return\fP);
.HP
Boolean XtPending(void);
.HP
void XtProcessEvent(XtInputMask \fImask\fP);
.HP
void XtMainLoop(void);
.SH ARGUMENTS
.IP \fIevent\fP 1i
Specifies a pointer to the event structure that is to be dispatched
to the appropriate event handler.
.IP \fIevent_return\fP 1i
Returns the event information to the specified event structure.
.IP \fImask\fP 1i
Specifies what types of events to process.
The mask is the bitwise inclusive OR of any combination of
.BR XtIMXEvent ,
.BR XtIMTimer ,
.BR XtIMAlternateInput ,
and
.BR XtIMSignal .
As a convenience, the \*(tk defines the symbolic name
.B XtIMAll
to be the bitwise inclusive OR of all event types.
.SH DESCRIPTION
.B XtNextEvent
has been replaced by
.BR XtAppNextEvent .
.LP
.B XtPeekEvent
has been replaced by
.BR XtAppPeekEvent .
.LP
.B XtPending
has been replaced by
.BR XtAppPending .
.LP
.B XtProcessEvent
has been replaced by
.BR XtAppProcessEvent .
.LP
.B XtMainLoop
has been replaced by
.BR XtAppMainLoop .
.SH "SEE ALSO"
XtAppNextEvent(3xt), XtAppPending(__libmansuffix__), XtAppPeekEvent(__libmansuffix__),
XtAppProcessEvent(__libmansuffix__), XtAppMainLoop(__libmansuffix__)
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
